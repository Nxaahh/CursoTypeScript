{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb,uDAAuD;AACvD;AACA;AACA;AACA,0MAA0M,cAAc;AACxN,8BAA8B,sBAAsB;AACpD,0BAA0B,YAAY,sBAAsB,qCAAqC,2CAA2C,MAAM;AAClJ,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ,EAAE,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY,WAAW,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA,eAAe;AACf;AACA;AACA,cAAc;AACd,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gDAAgD,eAAe,uCAAuC,eAAe,kBAAkB,cAAc;AACrJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf;AACA,kCAAkC;AAClC;AACA,yDAAyD,eAAe,iBAAiB,IAAI,QAAQ,IAAI,aAAa,KAAK;AAC3H,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ,EAAE,UAAU,oBAAoB,WAAW;AAC/E;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,4BAA4B,iBAAiB,sBAAsB,OAAO;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ,IAAI,aAAa;AAC5C;AACA;AACA;AACA,oCAAoC,eAAe,aAAa,KAAK;AACrE,0CAA0C,eAAe,aAAa,KAAK;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,aAAa,OAAO,eAAe,YAAY,KAAK,mBAAmB,KAAK;AACxG;;;;;;;;UE7NA;UACA;UACA;UACA;UACA","sources":["webpack://cursotypescript/./src/index.ts","webpack://cursotypescript/webpack/before-startup","webpack://cursotypescript/webpack/startup","webpack://cursotypescript/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nconsole.log(\"Hola Mundo\");\n/**\n * TIPOS DE DATOS\n * string\n * number - enteros y decimales\n * boolean - true / false\n * null\n * undefined\n *\n */\nvar nombre = \"Noah\"; //Variable global\nlet apellido = \"Montaño\"; //Variable local\nconst PI = 3.14159; //Constante\nlet a = \"Prueba\", b = \"a\", c = 4;\nconsole.log(a);\n//Concatenacion de texto\nconsole.log(\"Hola \" + nombre + \" \" + apellido);\nconsole.log(\"Hola\", nombre, apellido);\nconsole.log(`Hola ${nombre} ${apellido} `);\n//Array\nlet alumnos1A = [\"Juan\", \"Jose\", \"Alex\"];\nlet alumnos2A = [\"Fran\"];\nlet alumnos = [...alumnos1A, ...alumnos2A, \"Pablo\"];\nlet valores = [\"Hola\", true, 2];\nconsole.log(alumnos);\n//OBJETOS\nlet misDatos = {\n    nombre: \"Noah\",\n    apellidos: \"Montaño\",\n    edad: 18\n};\nlet configuracion = {\n    versionTS: \"Es6\",\n    versionCodigo: \"1.0\"\n};\nlet propiedad1 = configuracion.versionTS;\nlet propiedad2 = configuracion.versionCodigo;\nconsole.log(`La propiedad 1 es ${propiedad1} y la dos ${propiedad2}`);\n//Objetos Enumerados\nvar EstadoTarea;\n(function (EstadoTarea) {\n    EstadoTarea[\"Pendiente\"] = \"P\";\n    EstadoTarea[\"EnProceso\"] = \"E\";\n    EstadoTarea[\"Terminado\"] = \"T\";\n})(EstadoTarea || (EstadoTarea = {}));\nlet estadoPendiente = EstadoTarea.EnProceso;\nconsole.log(estadoPendiente);\nlet tarea1 = { nombre: \"Tarea1\", prioridad: 2, estado: EstadoTarea.Terminado };\nconsole.log(tarea1);\nlet Empleado2;\nEmpleado2 = { nombre: \"Miguel\", edad: 18, sueldo: 2040, codigoID: 2 };\nlet Empleado1 = { nombre: \"Manuel\", edad: 18, sueldo: 1080 };\nconsole.log(Empleado1);\nconsole.log(Empleado2);\n//Operador Ternario\n//Condicion ? verdadero : falso\nconsole.log(tarea1.estado == \"E\" ? `La tarea  ${tarea1.nombre} se encuentra en Proceso` : `La tarea ${tarea1.nombre} se encuentra en ${tarea1.estado}`);\n//if else\nif (tarea1.estado == \"P\") {\n    console.log(\"Pendiente\");\n}\nelse if (tarea1.estado == \"E\") {\n    console.log(\"En proceso\");\n}\nelse {\n    console.log(\"Termiando\");\n}\n//Switch\nswitch (tarea1.estado) {\n    case \"P\":\n        console.log(\"Tarea Pendiente\");\n        break;\n    case \"E\":\n        console.log(\"Tarea En Ejecucion\");\n        break;\n    case \"T\":\n        console.log(\"Tarea Terminada\");\n        break;\n    default:\n        console.log(\"En otro proceso\");\n}\n//Try Catch\ntry {\n    //let numero1:number = null;\n    // console.log(numero1.toString())\n}\ncatch (error) {\n    console.log(\"Se ha producido un error al convertir un numero en String\");\n}\n//Video 2\n//Video 3\n//for\nfor (let x = 0; x < 10; x++) {\n    console.log(\"Numero: \" + x);\n}\n//foreach\nlet tarea2 = { estado: EstadoTarea.Terminado, nombre: \"Tarea 2\", prioridad: 0 };\nlet tarea3 = { estado: EstadoTarea.Terminado, nombre: \"Tarea 3\", prioridad: 3 };\nlet listaTareas = [tarea1, tarea2, tarea3];\n//(valor1,valor2,valor3) => { }   FUNCION ARROW\n//function operar (valor1:number,valor2:number,valor3:number){ }\nlistaTareas.forEach((elemento, indice, listaTareas) => { console.log(`${elemento.nombre} - ${indice} - ${listaTareas} `); });\nfor (let indice = 0; indice < listaTareas.length; indice++) {\n    let elemento = listaTareas[indice];\n    console.log(elemento);\n}\n//while\n/*while(){\n\n}\n\n//do while\n\ndo{\n\n}while()\n\n*/\n//functions\n/**\n * Dado el parametro nombre muestra por pantalla un saludo\n * @param nombre\n */\nfunction saludar(nombre = \"Noah\", direccion, apellido) {\n    if (apellido != undefined) {\n        console.log(`Hola ${nombre} ${apellido} Vives en la calle ${direccion} `);\n    }\n    else {\n        console.log(`Hola ${nombre}`);\n    }\n    if (typeof (direccion) == \"string\") {\n        console.log(`Vives en la calle ${direccion}`);\n    }\n}\nsaludar(undefined, \"Martin\");\nsaludar(undefined, \"Moron\", \"Montaño\");\n//funciones anonimas\nlet fanonima = function () { console.log(\"Hola mundo\"); };\nconsole.log(fanonima);\nlet fitera = function (elemento, indice) {\n    console.log(`La tarea ${elemento.nombre} esta en la posicion ${indice}`);\n};\nlistaTareas.forEach(fitera);\n//Funcion con multiples parametros\nfunction muestraTareas(...tareas) {\n    tareas.forEach(fitera);\n}\nconsole.log(\"muestra tareas\");\nlet tarea4 = { estado: EstadoTarea.Terminado, nombre: \"Tarea 4\", prioridad: 0 };\nlet tarea5 = { estado: EstadoTarea.Terminado, nombre: \"Tarea 5\", prioridad: 3 };\nmuestraTareas(tarea1, tarea2, tarea3, tarea4, tarea5);\nlet listadoTareas2 = [...listaTareas, tarea4, tarea5];\nconsole.log(\"muestratareas listado2\");\nmuestraTareas(...listadoTareas2);\n//funcion farrow\nconsole.log(\"farrow\");\nlet farrow = (tarea, indice) => {\n    console.log(`${indice} - ${tarea.nombre}`);\n};\nfarrow(tarea1, 1);\nlistadoTareas2.forEach(farrow);\nlistadoTareas2.forEach((tarea) => { console.log(`${tarea.nombre}`); });\nlistadoTareas2.forEach(function (tarea) { console.log(`${tarea.nombre}`); });\n//CALLBACK\nlet fsuma = function suma(a, b) {\n    return a + b;\n};\nlet fresta = function resta(a, b) {\n    return a - b;\n};\nfunction opera(x, y, funcion) {\n    return funcion(x, y);\n}\nopera(1, 2, fsuma);\nopera(1, 2, fresta);\n/*\nasync function  getDataUniversity() : Promise<University[ ]> {\n    const data = await fetch(\"http://universities.hipolabs.com/search?country=Spain\");\n    let respuesta:Promise<University[]> =await data.json() as Promise<University[]>\n    return respuesta;\n}\ngetDataUniversity().then((data:University[])=>{\n    data.forEach((universidad)=>{console.log(universidad.name)})\n    })\n*/\n//ASYNC GENERADORA\nfunction* fgeneradora2() {\n    yield \"Hola\";\n    yield \"Mundo\";\n    yield \"IES\";\n}\nlet llamadafgen2 = fgeneradora2();\nconsole.log(llamadafgen2.next());\nconsole.log(llamadafgen2.next());\nconsole.log(llamadafgen2.next());\nconsole.log(llamadafgen2.next());\nfunction obtenerDatosWeb() {\n    return __asyncGenerator(this, arguments, function* obtenerDatosWeb_1() {\n        let peticion = yield __await(fetch(\"https://haveibeenpwned.com/api/v2/breaches\"));\n        let datos = yield __await(peticion.json());\n        for (let i = 0; i < datos.length; i++) {\n            yield yield __await(datos[i]);\n        }\n    });\n}\nlet datosWebPage = obtenerDatosWeb();\ndatosWebPage.next().then(({ value, done }) => { console.log(`${value.Name} -- ${value.Description} `); });\n//SOBRECARGA DE FUNCIONES\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/index.ts\"]();\n",""],"names":[],"sourceRoot":""}